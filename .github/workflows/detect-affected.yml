name: detect-affected

on:
  workflow_call:
    inputs:
      base:
        description: Git ref to diff against
        required: false
        type: string
        default: ""
      target:
        description: Nx target to check (build, test, lint â€¦)
        required: true
        type: string
      upload_artifact:
        description: Upload affected.json as artifact
        required: false
        type: boolean
        default: false
    outputs:
      apps:
        description: JSON array of affected projects
        value: ${{ jobs.detect.outputs.apps }}

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.set.outputs.apps }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Detect affected apps
        id: set
        run: |
          # Determine base reference for comparison
          if [ -n "${{ inputs.base }}" ]; then
            BASE_REF="${{ inputs.base }}"
          else
            # Use last release tag as base, fallback to main if no tags exist
            LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
            if [ -n "$LAST_TAG" ]; then
              BASE_REF="$LAST_TAG"
              echo "Using last release tag as base: $LAST_TAG"
            else
              BASE_REF="origin/main"
              echo "No release tags found, using origin/main as base"
            fi
          fi
          
          echo "Comparing against base: $BASE_REF"
          
          apps=$(npx nx show projects --affected --base="$BASE_REF" --json | jq -r '.[]' | grep -E '^(backend|design|devops|dsa|frontend|home|shell)$' | jq -R -s -c 'split("\n")[:-1]')
          echo "Affected apps: $apps"
          echo "apps=$apps" >> "$GITHUB_OUTPUT"

          # Save to file only if artifact upload is requested
          if [ "${{ inputs.upload_artifact }}" = "true" ]; then
            echo "$apps" > affected.json
          fi

      - name: Upload affected.json
        if: ${{ inputs.upload_artifact }}
        uses: actions/upload-artifact@v4
        with:
          name: affected-apps
          path: affected.json
