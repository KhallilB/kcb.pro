name: Draft Releases
on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  detect-affected:
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.affected.outputs.apps }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci

      - name: Get affected apps
        id: affected
        run: |
          # Get apps affected since last release tags
          affected_apps=$(npx nx show projects --affected --base=HEAD~5 | grep -E '^(backend|design|devops|dsa|frontend|home|shell)$' || echo "")

          if [ -z "$affected_apps" ]; then
            echo "apps=[]" >> "$GITHUB_OUTPUT"
            echo "No affected apps found"
          else
            apps_json=$(echo "$affected_apps" | jq -R -s -c 'split("\n")[:-1]')
            echo "apps=$apps_json" >> "$GITHUB_OUTPUT"
            echo "Affected apps: $affected_apps"
          fi

  release:
    needs: detect-affected
    if: ${{ needs.detect-affected.outputs.apps != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJson(needs.detect-affected.outputs.apps) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci

      - name: Setup Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Release ${{ matrix.app }}
        working-directory: apps/${{ matrix.app }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx release-it --ci --no-npm --github.release --github.autoGenerate=true --github.releaseName='Release ${{ matrix.app }} v${version}

  push-changes:
    needs: [detect-affected, release]
    if: ${{ needs.detect-affected.outputs.apps != '[]' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull latest changes and push
        run: |
          git pull --rebase origin main
          git push --follow-tags origin main
