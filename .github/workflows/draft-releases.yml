name: Draft Releases
on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  detect-merged-changes:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check.outputs.has_changes }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Check for apps with merged changes
        id: check
        run: |
          echo "üîç Checking for apps with merged changes..."
          
          # Use our smart release script to detect changes (dry run)
          if npm run release:smart:dry > /tmp/release_check.log 2>&1; then
            # Check if the output indicates apps would be released
            if grep -q "No affected apps detected\|No apps need releasing" /tmp/release_check.log; then
              echo "has_changes=false" >> "$GITHUB_OUTPUT"
              echo "‚úÖ No apps need releasing"
            else
              echo "has_changes=true" >> "$GITHUB_OUTPUT"
              echo "üìã Found apps that need releasing"
            fi
          else
            # If dry run fails, assume we have changes to be safe
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
            echo "‚ö†Ô∏è  Could not determine changes, proceeding with release attempt"
          fi
          
          # Show the log for debugging
          cat /tmp/release_check.log

  release:
    needs: detect-merged-changes
    if: ${{ needs.detect-merged-changes.outputs.has_changes == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0
          fetch-tags: true
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - run: npm ci

      - name: Disable Husky and setup Git
        run: |
          export HUSKY=0
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git config --global core.hooksPath /dev/null
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Create Release Drafts for apps with merged changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üöÄ Starting smart release for apps with merged changes..."

          # Use our smart release workflow (it will auto-detect the base)
          if HUSKY=0 npm run release:smart; then
            echo "‚úÖ Successfully released all apps with merged changes"
          else
            echo "‚ùå Failed to release apps"
            exit 1
          fi

      - name: Push version bumps and tags
        run: |
          # Push all commits and tags together
          git push --follow-tags origin main
