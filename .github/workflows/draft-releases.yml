name: Draft Releases
on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  detect-affected:
    uses: ./.github/workflows/detect-affected.yml
    with:
      target: build
      upload_artifact: true

  release:
    needs: detect-affected
    if: ${{ needs.detect-affected.outputs.apps != '[]' }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci

      - name: Setup Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Create Release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Creating unified release for affected apps: ${{ needs.detect-affected.outputs.apps }}"

          # Run release-it
          npx release-it --ci

          # Capture the version
          version=$(node -p "require('./package.json').version")
          echo "version=$version" >> "$GITHUB_OUTPUT"
          echo "Released version: $version"

  deploy:
    needs: [detect-affected, release]
    if: ${{ always() && needs.detect-affected.outputs.apps != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJson(needs.detect-affected.outputs.apps) }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci
