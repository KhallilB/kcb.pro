name: release
on:
  push:
    branches: [main]

permissions:
  contents: write
  packages: write

jobs:
  detect-affected:
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.set.outputs.apps }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm install

      - id: set
        run: |
          APPS=$(npx nx show projects --affected \
                   --base="${{ github.event.before }}" \
                   --head="${{ github.event.after }}" \
                   --json | jq -r '.[]' | jq -R -s -c 'split("\n")[:-1]')
          echo "apps=$APPS" >> "$GITHUB_OUTPUT"

  per-app-release:
    needs: detect-affected
    if: needs.detect-affected.outputs.apps != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJson(needs.detect-affected.outputs.apps) }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm install

      - name: Configure Git
        run: |
          git config --global user.name  "release-bot"
          git config --global user.email "release-bot@users.noreply.github.com"

      - name: Bump version for ${{ matrix.app }}
        run: |
          npx nx release version \
            --projects="${{ matrix.app }}" \
            --override="version.generatorOptions.updateDependents=false" \
            --git-commit=false --git-tag=false --git-push=false

      - name: Generate changelog, commit, tag, push
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx nx release changelog \
            --projects="${{ matrix.app }}" \
            --git-commit --git-tag --git-push \
            --git-commit-message="chore(${{ matrix.app }}): release v{version} [skip ci]"

      - name: Draft GitHub release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VER=$(jq -r .version apps/${{ matrix.app }}/package.json)
          gh release create "${{ matrix.app }}@$VER" \
            --draft \
            --title "${{ matrix.app }} $VER" \
            --notes-file "apps/${{ matrix.app }}/CHANGELOG.md"
