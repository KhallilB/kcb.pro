name: version
on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Setup git
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - run: npm ci

      - name: Work out affected projects
        id: affected
        run: |
          APPS=$(npx nx show projects --affected \
                    --base="${{ github.event.before }}" \
                    --head="${{ github.event.after }}" \
                    --json | jq -r '.[]' | paste -sd, -)
          echo "apps=$APPS" >> $GITHUB_OUTPUT

      - name: Nx Release â€“ version & tag
        if: steps.affected.outputs.apps != ''
        run: |
          npx nx release version \
            --projects="${{ steps.affected.outputs.apps }}" \
            --git-commit --git-tag --git-push

      - name: Draft release
        if: steps.affected.outputs.apps != ''
        run: |
          npx nx release changelog "$VER" \
            --projects="$APP" \
          gh release create "$TAG" \
            --draft --title "$APP $VER" \
            --notes-file "apps/$APP/CHANGELOG.md"
