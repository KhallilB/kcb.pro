name: Release

on:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Configure git
        run: |
          git config --global user.name "release-bot"
          git config --global user.email "release-bot@users.noreply.github.com"

      - name: Install dependencies
        run: npm install

      - name: Check for changes requiring release
        id: changes
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            echo "No previous tags found, will process all projects"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            # Check for conventional commits since last tag
            COMMITS=$(git log ${LAST_TAG}..HEAD --oneline --grep="^feat" --grep="^fix" --grep="^BREAKING CHANGE" --grep="^feat!" --grep="^fix!" --grep="^chore!" --grep="^docs!" --grep="^style!" --grep="^refactor!" --grep="^perf!" --grep="^test!" --grep="^build!" --grep="^ci!" --extended-regexp)
            if [ -n "$COMMITS" ]; then
              echo "Found conventional commits requiring release:"
              echo "$COMMITS"
              echo "has_changes=true" >> $GITHUB_OUTPUT
            else
              echo "No conventional commits found since last release"
              echo "has_changes=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Run nx release
        if: steps.changes.outputs.has_changes == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Run nx release with conventional commits
          npx nx release --verbose

          # Push changes back to main
          git push --follow-tags origin main

      - name: Trigger deployments
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          echo "Release completed, deployments will be triggered by Render"
