name: version
on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install
        run: npm ci

      - id: affected
        run: |
          APPS=$(npx nx show projects --affected \
                    --base="${{ github.event.before }}" \
                    --head="${{ github.event.after }}" \
                    --json | jq -r '.[]' | paste -sd, -)
          echo "apps=$APPS" >> "$GITHUB_OUTPUT"

      - name: Nx release â€“ version & tag
        if: steps.affected.outputs.apps != ''
        run: |
          npx nx release version \
            --projects="${{ steps.affected.outputs.apps }}" \
            --git-commit --git-tag --git-push --verbose
      - name: Draft GitHub releases for new tags
        if: steps.affected.outputs.apps != ''
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for TAG in $(git tag --points-at HEAD); do
            APP="${TAG%%@*}"
            VER="${TAG#*@}"

            echo "ðŸ“¦  creating draft for $TAG"

            gh release create "$TAG" \
              --repo "$GITHUB_REPOSITORY" \
              --draft \
              --title "$APP $VER" \
              --notes-file "apps/$APP/CHANGELOG.md" \
              --verify-tag
          done
