name: build

on:
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

jobs:
  # ──────────────────────────────────────────────
  # Decide which projects are affected
  # ──────────────────────────────────────────────
  detect-affected:
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.set.outputs.apps }}

    steps:
      # Need the base ref so Nx can diff
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Get affected projects (Nx 19)
        id: set
        shell: bash
        run: |
          set -euo pipefail
          # Nx 19: built-in JSON output, no parsing needed
          affected=$(npx nx show projects \
                       --affected \
                       --base=origin/main \
                       --target=build \
                       --json)

          echo "Detected projects: $affected"
          echo "apps=$affected" >>"$GITHUB_OUTPUT"

  # ──────────────────────────────────────────────
  # Build each affected project
  # ──────────────────────────────────────────────
  build:
    needs: detect-affected
    # Skip when the array is empty
    if: ${{ needs.detect-affected.outputs.apps != '[]' }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app: ${{ fromJson(needs.detect-affected.outputs.apps) }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Build ${{ matrix.app }}
        env:
          NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
          NX_RUN_GROUP: ${{ github.run_id }} # groups all targets in one run
        run: npx nx build ${{ matrix.app }} --configuration=production
